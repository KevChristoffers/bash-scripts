version: '3.8'
services:
# Cloudflare is the registrar. All public-facing things go through them first
  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    #/var/lib/docker/volumes/portainer_data/_data/compose/2/crowdsec.env (as seen from docker lxc)
    env_file: crowdsec.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - URL=kevchr.com
      - ONLY_SUBDOMAINS=false # Everything is hosted locally, proxies through cloudflare
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - EMAIL=kevin@kevchr.com
      - DOCKER_MODS=ghcr.io/linuxserver/mods:swag-crowdsec
      - CROWDSEC_API_KEY: # This value is defined on the host
      - CROWDSEC_LAPI_URL=http://crowdsec:8080
    volumes:
      - /config/config/swag:/config
      - well-known:/data/letsencrypt-acme-challenge/.well-known #https://github.com/NginxProxyManager/nginx-proxy-manager/issues/210#issuecomment-1123311840
      - /data/data/wiki:/wiki
    ports:
      - 881:80
      - 443:443
      #- 5000:5000 #Wikimd
    restart: unless-stopped
    
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:latest
    container_name: crowdsec
    environment:
      - GID=1000
      - COLLECTIONS=crowdsecurity/nginx crowdsecurity/http-cve crowdsecurity/whitelist-good-actors
      - CUSTOM_HOSTNAME=home-srv
    volumes:
      - /config/config/crowdsec:/etc/crowdsec:rw
      - /data/data/crowdsec:/var/lib/crowdsec/data:rw
      - /config/config/swag/log/nginx:/var/log/swag:ro
      - /config/config/logs:/var/log/host:ro 
#    networks:
#      - wiki
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true


  filezilla:
    image: lscr.io/linuxserver/filezilla:latest
    container_name: filezilla
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1002
      - PGID=1001
      - TZ=America/Chicago
    volumes:
      - /config/config/filezilla:/config
      - /data/data:/data
    ports:
      - 3004:3000
    restart: unless-stopped

#  syncthing:
#    image: lscr.io/linuxserver/syncthing:latest
#    container_name: syncthing
#    hostname: syncthing #optional
#    environment:
#      - PUID=1002
#      - PGID=1001
#      - TZ=America/Chicago
#    volumes:
#      - /config/config/syncthing:/config
#      - /data/data:/data
#    ports:
#      - 8384:8384
#      - 22000:22000/tcp
#      - 22000:22000/udp
#      - 21027:21027/udp
#    restart: unless-stopped

  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago

  dns-server:
      container_name: dns-server
      hostname: dns-server
      image: technitium/dns-server:latest
      # Use "host" network mode for DHCP deployments
      # network_mode: "host"
      ports:
        - "5380:5380/tcp" #DNS web console
        - "53:53/udp" #DNS service
        - "53:53/tcp" #DNS service
        - "67:67/udp" #DHCP service
        - "853:853/tcp" #DNS-over-TLS service
        - "4443:443/tcp" #DNS-over-HTTPS service
        - "880:80/tcp" #DNS-over-HTTPS service certbot certificate renewal
        - "8053:8053/tcp" #DNS-over-HTTPS using reverse proxy
      environment:
        - DNS_SERVER_DOMAIN=dns-server #The primary domain name used by this DNS Server to identify itself.
        # - DNS_SERVER_ADMIN_PASSWORD=password #DNS web console admin user password.
        # - DNS_SERVER_ADMIN_PASSWORD_FILE=password.txt #The path to a file that contains a plain text password for the DNS web console admin user.
        # - DNS_SERVER_PREFER_IPV6=false #DNS Server will use IPv6 for querying whenever possible with this option enabled.
        # - DNS_SERVER_OPTIONAL_PROTOCOL_DNS_OVER_HTTP=false #Enables DNS server optional protocol DNS-over-HTTP on TCP port 8053 to be used with a TLS terminating reverse proxy like nginx.
        # - DNS_SERVER_RECURSION=AllowOnlyForPrivateNetworks #Recursion options: Allow, Deny, AllowOnlyForPrivateNetworks, UseSpecifiedNetworks.
        # - DNS_SERVER_RECURSION_DENIED_NETWORKS=1.1.1.0/24 #Comma separated list of IP addresses or network addresses to deny recursion. Valid only for `UseSpecifiedNetworks` recursion option.
        # - DNS_SERVER_RECURSION_ALLOWED_NETWORKS=127.0.0.1, 192.168.1.0/24 #Comma separated list of IP addresses or network addresses to allow recursion. Valid only for `UseSpecifiedNetworks` recursion option.
        # - DNS_SERVER_ENABLE_BLOCKING=false #Sets the DNS server to block domain names using Blocked Zone and Block List Zone.
        # - DNS_SERVER_ALLOW_TXT_BLOCKING_REPORT=false #Specifies if the DNS Server should respond with TXT records containing a blocked domain report for TXT type requests.
        # - DNS_SERVER_BLOCK_LIST_URLS= #A comma separated list of block list URLs.
        - DNS_SERVER_FORWARDERS=1.1.1.1, 8.8.8.8 #Comma separated list of forwarder addresses.
        - DNS_SERVER_FORWARDER_PROTOCOL=Tcp #Forwarder protocol options: Udp, Tcp, Tls, Https, HttpsJson.
        - DNS_SERVER_LOG_USING_LOCAL_TIME=true #Enable this option to use local time instead of UTC for logging.
      volumes:
        - /config/config/technitium:/etc/dns/config    
      restart: unless-stopped
      sysctls:
        - net.ipv4.ip_local_port_range=1024 65000

  db:
    image: postgres:11-alpine
    environment:
    # These values are defined on the host
      POSTGRES_DB:
      POSTGRES_PASSWORD:
      POSTGRES_USER:
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - /data/data/wiki:/var/lib/postgresql/data

  wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      # These values are defined on the host
      DB_USER:
      DB_PASS:
      DB_NAME:
    # The regular wikijs user only has access to /wiki/ (as listed inside of the wiki.js container)
    # or /data/data/wiki (as listed in pve docker lxc)
    # Backup has been moved to /wiki/backup
#    volumes:
#      - /data/data/wiki-backup:/backup
    restart: unless-stopped
    ports:
      - 3001:3000

#networks:
#  wiki:
#    external: true
    
volumes:
  db-data:
  well-known: # created volume with "docker volume create well-known"
    external: true